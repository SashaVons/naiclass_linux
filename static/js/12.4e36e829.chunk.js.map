{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/FormInput/FormInput.tsx","components/FormSelect/FormSelect.tsx","pages/CreateSubCategory/CreateSubCategoryContainer.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","FormInput","placeholder","errors","name","type","register","title","required","customStyle","onChange","props","className","style","step","e","value","ref","FormSelect","control","options","onChangeAction","defaultValue","multi","width","marginBottom","render","onBlur","isMulti","filter","el","connect","state","categories","category","dispatch","fetchAllCategories","fetchCreateSubCategory","name_pt","available","history","useHistory","useState","useForm","handleSubmit","useEffect","onSubmit","data","from","timeFrom","to","timeTo","map","_id","label","marginRight"],"mappings":"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","file":"static/js/12.4e36e829.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { FC } from \"react\";\nimport { DeepMap, FieldError } from \"react-hook-form\";\nimport \"./form-input.scss\";\n\ninterface FormInputProps {\n  placeholder: string;\n  errors: DeepMap<Record<string, any>, FieldError>;\n  name: string;\n  type: string;\n  register: any;\n  required: any;\n  title?: string;\n  customStyle?: any;\n  onChange?: any;\n  step?: string;\n  min?: string;\n  max?: string;\n}\n\nexport const FormInput: FC<FormInputProps> = ({\n  placeholder,\n  errors,\n  name,\n  type,\n  register,\n  title,\n  required,\n  customStyle,\n  onChange,\n  ...props\n}) => {\n  return (\n    <div className=\"Container\" style={customStyle}>\n      <p className=\"Row-Title\">{title}</p>\n      <div className=\"Container-Row\">\n        <input\n          className={`Container-Row-Input ${\n            errors[name] ? \"Container-Row-Input-Error\" : \"\"\n          }`}\n          type={type}\n          step=\"0.01\"\n          name={name}\n          onChange={(e) => (onChange ? onChange(e.target.value) : null)}\n          placeholder={placeholder}\n          ref={register(required)}\n          {...props}\n        />\n        {type === \"checkbox\" && (\n          <b className=\"Container-Row-Title\">{placeholder}</b>\n        )}\n      </div>\n      <div className={`Error ${errors[name] ? \"Error-Trans\" : \"\"}`}>\n        {errors[name] && <b className=\"Error-Text\">Value required</b>}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport Select from \"react-select\";\nimport { Controller } from \"react-hook-form\";\nimport \"./form-select.scss\";\n\ninterface FormSelectProps {\n  placeholder?: string;\n  errors: any;\n  name: string;\n  control: any;\n  options: any;\n  required: any;\n  title?: string;\n  onChangeAction?: (value: any) => void;\n  defaultValue?: any;\n  multi?: boolean;\n}\n\nexport const FormSelect: FC<FormSelectProps> = ({\n  placeholder,\n  errors,\n  name,\n  control,\n  options,\n  title,\n  required,\n  onChangeAction,\n  defaultValue,\n  multi,\n}) => {\n  return (\n    <div style={{ width: \"100%\", marginBottom: 24 }}>\n      <p className=\"Row-Title\">{title}</p>\n      <Controller\n      control={control}\n      style={{ width: \"100%\", marginBottom: 24 }}\n      name={name}\n      render={({ onChange, onBlur, value, name, ref }) => (\n        <Select\n          className={\"Select\"}\n          onChange={(e: any) => {\n            if (onChangeAction) onChangeAction(e.value);\n            onChange(e);\n          }}\n          value={value}\n          isMulti={multi ? multi : false}\n          placeholder={placeholder}\n          options={options}\n        />\n      )}\n      defaultValue={\n        defaultValue\n          ? options.filter((el: any) => el.value === defaultValue)[0]\n          : null\n      }\n      />\n    </div>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { useForm } from \"react-hook-form\";\nimport { FormInput } from \"../../components/FormInput/FormInput\";\nimport { fetchCreatePhoto } from \"../../redux/image/actions\";\nimport { RootState } from \"../../redux/RootReducer\";\nimport \"./create-sub-category.scss\";\nimport {\n  fetchAllCategories,\n  fetchCreateCategory,\n} from \"../../redux/categories/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormSelect } from \"../../components/FormSelect/FormSelect\";\nimport { fetchCreateSubCategory } from \"../../redux/sub_categories/actions\";\n\ntype CreateCategory = {\n  name: string;\n  name_pt: string;\n  timeFrom: string;\n  timeTo: string;\n  category: any;\n};\n\ninterface CreateSubCategoryProps {\n  categories: any;\n  fetchAllCategories: () => void;\n  fetchCreateSubCategory: (\n    name: string,\n    name_pt: string,\n    category: string,\n    available: {\n      from: string,\n      to: string,\n    },\n    history: any\n  ) => void;\n}\n\nconst CreateSubCategoryContainer: FC<CreateSubCategoryProps> = ({\n  fetchAllCategories,\n  fetchCreateSubCategory,\n  categories,\n}) => {\n  let history = useHistory();\n  const [isPhotoLoad, setPhotoLoad] = useState(false);\n  const { register, handleSubmit, errors, control } = useForm();\n\n  const onSubmit = (data: CreateCategory) => {\n    fetchCreateSubCategory(\n      data.name,\n      data.name_pt,\n      data.category.value,\n      {\n        from: data.timeFrom,\n        to: data.timeTo\n      },\n      history\n    );\n  };\n\n  useEffect(() => {\n    fetchAllCategories();\n  }, []);\n\n  return (\n    <div className=\"Sub-Category-Create\">\n      <div className=\"Sub-Category-Create-Header\">\n        <p className=\"Sub-Category-Create-Header-Title\">Creat Sub Category</p>\n        <div className=\"Sub-Category-Create-Header-Button\"></div>\n      </div>\n      {categories.length !== 0 ? (\n        <form\n          className=\"Sub-Category-Create-Form\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <FormInput\n            placeholder={\"Name\"}\n            name={\"name\"}\n            type={\"text\"}\n            errors={errors}\n            register={register}\n            required={{ required: true }}\n          />\n          <FormInput\n            placeholder={\"Portugal Name\"}\n            name={\"name_pt\"}\n            type={\"text\"}\n            errors={errors}\n            register={register}\n            required={{ required: true }}\n          />\n          <FormSelect\n            placeholder={\"Category\"}\n            name={\"category\"}\n            options={categories.map((el: any) => {\n              return { value: el._id, label: el.name };\n            })}\n            errors={errors}\n            control={control}\n            required={{ required: true }}\n          />\n          <p className=\"Sub-Category-Create-Form-Title\">\n            Available time:\n          </p>\n          <div className=\"Sub-Category-Create-Form-Row\">\n            <FormInput\n              customStyle={{ marginRight: \"20px\" }}\n              placeholder={\"From\"}\n              name={\"timeFrom\"}\n              type={\"time\"}\n              step=\"1800\"\n              errors={errors}\n              register={register}\n              required={{}}\n            />\n            <FormInput\n              placeholder={\"To\"}\n              name={\"timeTo\"}\n              type={\"time\"}\n              step=\"1800\"\n              errors={errors}\n              register={register}\n              required={{}}\n            />\n          </div>\n          <input\n            type=\"submit\"\n            className=\"Sub-Category-Create-Form-Button\"\n            value=\"Create\"\n          />\n        </form>\n      ) : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    categories: state.category.categories,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAllCategories: () => dispatch(fetchAllCategories()),\n  fetchCreateSubCategory: (\n    name: string,\n    name_pt: string,\n    category: string,\n    available: {\n      from: string,\n      to: string,\n    },\n    history: any\n  ) => dispatch(fetchCreateSubCategory(name, name_pt, category, available, history)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateSubCategoryContainer);\n"],"sourceRoot":""}