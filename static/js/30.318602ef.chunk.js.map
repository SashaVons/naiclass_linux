{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/UserStatistic/OrderStatistic.tsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","connect","state","orders","dispatch","fetchAllOrders","fetchDeleteCategory","categoryId","useRouteMatch","useHistory","useState","sortOrders","setSortOrders","sales","setSales","useEffect","getOrdersPrice","price","map","order","repeats","length","console","log","push","result","reduce","acc","el","groupOrders","filter","status","phoneNumber","r","a","entries","__sort","number","title","toFixed","className","getTotalOrders","keys","sale","align","sort","b","index"],"mappings":"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","file":"static/js/30.318602ef.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { FC, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport {\n  fetchAllCategories,\n  fetchDeleteCategory,\n} from \"../../redux/categories/actions\";\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { RootState } from \"../../redux/RootReducer\";\nimport Icon from \"@material-ui/core/Icon\";\nimport \"./order-statistic.scss\";\nimport { AcceptDialog } from \"../../components/AcceptDialog/AcceptDialog\";\nimport { fetchAllOrders } from \"../../redux/orders/actions\";\nimport moment from \"moment\";\n\ninterface Sale {\n  count: number;\n  numbers: string[];\n}\n\ninterface OrdersListProps {\n  orders: any;\n  fetchAllOrders: () => void;\n  fetchDeleteCategory: (categoryId: string) => void;\n}\n\nconst OrdersListContainer: FC<OrdersListProps> = ({\n  orders,\n  fetchAllOrders,\n  fetchDeleteCategory,\n}) => {\n  const match = useRouteMatch();\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const [categoryIndex, setCategoryIndex] = useState(0);\n  const [sortOrders, setSortOrders] = useState([])\n  const [sales, setSales] = useState<any | null>(null)\n\n  useEffect(() => {\n    fetchAllOrders();\n  }, []);\n\n  const getOrdersPrice = (orders: any[]) => {\n    let price = 0\n    orders.map((order: any) => price += order.price)\n    \n    return price\n  }\n\n  const getTotalOrders = () => {\n    let orders = 0\n    sortOrders.map((order: any) => orders += order.orders.length)\n\n    return orders\n  }\n\n  useEffect(() => {\n    const repeats: number[] = []\n\n    sortOrders.map((order: any) => order.orders.length === 80 && console.log(order))\n    sortOrders.map((order: any) => repeats.push(order.orders.length))\n    console.log('REPEATS:', repeats)\n\n    \n    var result = repeats.reduce(function(acc, el) {\n      // @ts-ignore\n      acc[el] = (acc[el] || 0) + 1;\n      return acc;\n    }, {});\n\n    setSales(result)\n  }, [sortOrders])\n\n  useEffect(() => {\n    if (orders) {\n      const statusSorts = orders.filter((order: any) => order.status !== 'CANCELED' && typeof order.phoneNumber !== 'undefined')\n\n      const groupOrders = statusSorts.reduce((r: any, a: any) => {\n        r[a.phoneNumber] = [...r[a.phoneNumber] || [], a]\n        return r\n      }, {})\n\n      console.log(Object.entries(groupOrders))\n      const __sort = Object.entries(groupOrders).map((number: any) => ({\n        phoneNumber: number[0],\n        title: `${number[1].length} (${getOrdersPrice(number[1]).toFixed(2)}â‚¬)`,\n        orders: number[1],\n      }))\n\n      setSortOrders(__sort as any)\n    }\n  }, [orders])\n\n  const sortCompare = (a: any, b: any) => {\n    if (a.orders.length > b.orders.length) return -1\n    if (a.orders.length < b.orders.length) return 1\n\n    return 0\n  }\n\n  return (\n    <>\n      <div className=\"Orders\">\n        <div className=\"Orders-Header\">\n          <div className=\"Orders-Header-Button\"></div>\n          <p className=\"Orders-Header-Title\">Sales Statistic</p>\n          <div className=\"Orders-Header-Button\"></div>\n        </div>\n        <div className=\"Sales-Header-Labels\">\n            <div className=\"Sales-Header-Label\">\n              <div className=\"Sales-Header-Label-Title\">\n                TOTAL ORDERS\n              </div>\n              <div>{getTotalOrders()}</div>\n            </div>\n            <div className=\"Sales-Header-Label\">\n              <div className=\"Sales-Header-Label-Title\">\n                TOTAL USERS\n              </div>\n              <div>{sortOrders.length}</div>\n            </div>\n        </div>\n        <table className=\"Orders-Table\">\n          <thead>\n            <tr>\n              <th>Count</th>\n              <th>Sales of count</th>\n            </tr>\n          </thead>\n          <tbody>\n            {!!sales ? Object.keys(sales).map(sale => (\n              <>\n                <tr>\n                  <td className=\"Orders-Table-Title\" align=\"left\">{sale}</td>\n                  <td className=\"Orders-Table-Title\" align=\"left\">\n                    {sales[sale]}\n                  </td>\n                </tr>\n              </>\n            )\n            ) : null}\n          </tbody>\n        </table>\n\n        <table className=\"Orders-Table\">\n          <thead>\n            <tr>\n              <th>Phone number</th>\n              <th>Orders</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortOrders && sortOrders.sort(sortCompare).map((phoneNumber: any, index) => phoneNumber.phoneNumber !== 'undefined' ? (\n              <>\n                <tr>\n                  <td className=\"Orders-Table-Title\" align=\"left\">{phoneNumber.phoneNumber}</td>\n                  <td className=\"Orders-Table-Title\" align=\"left\">\n                    {phoneNumber.title}\n                  </td>\n                </tr>\n              </>\n            ) : null)}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    orders: state.orders.orders,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAllOrders: () => dispatch(fetchAllOrders()),\n  fetchDeleteCategory: (categoryId: string) =>\n    dispatch(fetchDeleteCategory(categoryId)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrdersListContainer);\n"],"sourceRoot":""}