{"version":3,"sources":["components/AcceptDialog/AcceptDialog.tsx","pages/UsersList/UsersListContainer.tsx"],"names":["AcceptDialog","title","content","show","setShow","actionOnSuccess","open","onClose","aria-labelledby","aria-describedby","id","onClick","color","autoFocus","connect","state","users","dispatch","fetchGetUsers","fetchBlockUser","userId","blocked","useState","userIndex","setUserIndex","openBlockUser","setOpenBlockUser","match","useRouteMatch","useEffect","console","log","length","_id","className","map","user","index","align","phoneNumber","firstName","fatherName","lastName","discount","to","url"],"mappings":"gOAgBaA,EAAsC,SAAC,GAM7C,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEA,OACE,mCACE,eAAC,IAAD,CACEC,KAAMH,EACNI,QAAS,kBAAMH,GAAQ,IACvBI,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAAC,IAAD,CAAaC,GAAG,qBAAhB,SAAsCT,IAErCC,EACC,cAAC,IAAD,UACE,cAAC,IAAD,CAAmBQ,GAAG,2BAAtB,SACGR,MAGH,KACJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAQS,QAAS,kBAAMP,GAAQ,IAAQQ,MAAM,UAA7C,oBAGA,cAAC,IAAD,CACED,QAAS,WACPN,IACAD,GAAQ,IAEVQ,MAAM,UACNC,WAAS,EANX,0B,oJC6EKC,uBAZS,SAACC,GACvB,MAAO,CACLC,MAAOD,EAAMC,MAAMA,UAII,SAACC,GAAD,MAAyB,CAClDC,cAAe,kBAAMD,EAASC,gBAC9BC,eAAgB,SAACC,EAAgBC,GAAjB,OACdJ,EAASE,YAAeC,EAAQC,QAGrBP,EAzGgC,SAAC,GAIzC,IAHLI,EAGI,EAHJA,cACAC,EAEI,EAFJA,eACAH,EACI,EADJA,MACI,EAC8BM,mBAAiB,GAD/C,mBACGC,EADH,KACcC,EADd,OAEsCF,oBAAS,GAF/C,mBAEGG,EAFH,KAEkBC,EAFlB,KAGEC,EAAQC,cAQd,OANAC,qBAAU,WACRX,MACC,IAEHY,QAAQC,IAAIf,GAGV,qCACE,cAAC,IAAD,CACEf,MACEe,EAAMgB,OAAN,sBAEMhB,EAAMO,GAAWF,QAAU,KAAO,GAFxC,oBAII,GAENlB,KAAMsB,EACNpB,gBAAiB,WACXkB,GACFJ,EAAeH,EAAMO,GAAWU,KAAMjB,EAAMO,GAAWF,UAE3DjB,QAASsB,IAEX,sBAAKQ,UAAU,QAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,wBACf,mBAAGA,UAAU,qBAAb,sBAEF,wBAAOA,UAAU,cAAjB,UACE,gCACE,+BACE,8CACA,sCACA,0CACA,6CAGJ,gCACGlB,EACGA,EAAMmB,KAAI,SAACC,EAAWC,GAAZ,OACR,mCACE,+BACE,oBAAIH,UAAU,oBAAoBI,MAAM,OAAxC,SACGF,EAAKG,YACFH,EAAKG,YACL,sBAEN,oBAAIL,UAAU,oBAAoBI,MAAM,OAAxC,mBACMF,EAAKI,UADX,YACwBJ,EAAKK,WAD7B,YAC2CL,EAAKM,YAEhD,oBAAIR,UAAU,oBAAoBI,MAAM,OAAxC,SACGF,EAAKO,SAAL,UAAmBP,EAAKO,SAAxB,KAAsC,OAEzC,qBAAIL,MAAM,QAAV,UAEE,cAAC,IAAD,CAAMM,GAAE,UAAKjB,EAAMkB,IAAX,YAAkBT,EAAKH,KAA/B,SACE,cAAC,IAAD,CAAMC,UAAU,mBAAhB,oBAEF,qBACEvB,QAAS,WACPa,EAAaa,GACbX,GAAiB,IAHrB,SAME,cAAC,IAAD,CACEQ,UAAS,sBACPE,EAAKf,QAAU,UAAY,UAF/B,SAKGe,EAAKf,QAAU,YAAc,uBAO1C","file":"static/js/28.47413008.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\ninterface AcceptDialogProps {\n  title: string;\n  content?: string;\n  show: boolean;\n  setShow: React.Dispatch<React.SetStateAction<boolean>>;\n  actionOnSuccess: () => void;\n}\n\nexport const AcceptDialog: FC<AcceptDialogProps> = ({\n  title,\n  content,\n  show,\n  setShow,\n  actionOnSuccess,\n}) => {\n  return (\n    <>\n      <Dialog\n        open={show}\n        onClose={() => setShow(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n\n        {content ? (\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {content}\n            </DialogContentText>\n          </DialogContent>\n        ) : null}\n        <DialogActions>\n          <Button onClick={() => setShow(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              actionOnSuccess();\n              setShow(false);\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { RootState } from \"../../redux/RootReducer\";\nimport { fetchBlockUser, fetchGetUsers } from \"../../redux/users/actions\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport Icon from \"@material-ui/core/Icon\";\nimport \"./users-list.scss\";\nimport { AcceptDialog } from \"../../components/AcceptDialog/AcceptDialog\";\n\ninterface UsersListProps {\n  fetchGetUsers: () => void;\n  fetchBlockUser: (userId: string, blocked: boolean) => void;\n  users: Array<any>;\n}\n\nconst UsersListContainer: FC<UsersListProps> = ({\n  fetchGetUsers,\n  fetchBlockUser,\n  users,\n}) => {\n  const [userIndex, setUserIndex] = useState<number>(0);\n  const [openBlockUser, setOpenBlockUser] = useState(false);\n  const match = useRouteMatch();\n\n  useEffect(() => {\n    fetchGetUsers();\n  }, []);\n\n  console.log(users);\n\n  return (\n    <>\n      <AcceptDialog\n        title={\n          users.length\n            ? `Do you want ${\n                users[userIndex].blocked ? \"un\" : \"\"\n              }block this user?`\n            : \"\"\n        }\n        show={openBlockUser}\n        actionOnSuccess={() => {\n          if (userIndex)\n            fetchBlockUser(users[userIndex]._id, !users[userIndex].blocked);\n        }}\n        setShow={setOpenBlockUser}\n      />\n      <div className=\"Users\">\n        <div className=\"Users-Header\">\n          <div className=\"Users-Header-Button\"></div>\n          <p className=\"Users-Header-Title\">Users</p>\n        </div>\n        <table className=\"Users-Table\">\n          <thead>\n            <tr>\n              <th>Phone Number</th>\n              <th>Name</th>\n              <th>Discount</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users\n              ? users.map((user: any, index: number) => (\n                  <>\n                    <tr>\n                      <td className=\"Users-Table-Title\" align=\"left\">\n                        {user.phoneNumber\n                          ? user.phoneNumber\n                          : \"Older app version\"}\n                      </td>\n                      <td className=\"Users-Table-Title\" align=\"left\">\n                        {`${user.firstName} ${user.fatherName} ${user.lastName}`}\n                      </td>\n                      <td className=\"Users-Table-Title\" align=\"left\">\n                        {user.discount ? `${user.discount}%` : \"0%\"}\n                      </td>\n                      <td align=\"right\">\n                        {/* /edit/:categoryId */}\n                        <Link to={`${match.url}/${user._id}`}>\n                          <Icon className=\"Users-Table-Edit\">edit</Icon>\n                        </Link>\n                        <div\n                          onClick={() => {\n                            setUserIndex(index);\n                            setOpenBlockUser(true);\n                          }}\n                        >\n                          <Icon\n                            className={`Users-Table-${\n                              user.blocked ? \"Unblock\" : \"Delete\"\n                            }`}\n                          >\n                            {user.blocked ? \"autorenew\" : \"block\"}\n                          </Icon>\n                        </div>\n                      </td>\n                    </tr>\n                  </>\n                ))\n              : null}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    users: state.users.users,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchGetUsers: () => dispatch(fetchGetUsers()),\n  fetchBlockUser: (userId: string, blocked: boolean) =>\n    dispatch(fetchBlockUser(userId, blocked)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersListContainer);\n"],"sourceRoot":""}