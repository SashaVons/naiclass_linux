{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/FormInput/FormInput.tsx","pages/EditPromocode/EditPromocodeContainer.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","FormInput","placeholder","errors","name","type","register","title","required","customStyle","onChange","props","className","style","step","e","value","ref","connect","state","singlePromocode","promocode","dispatch","fetchSinglePromocode","promocodeId","fetchUpdatePromocode","updated_promocode","history","useHistory","useForm","handleSubmit","setValue","useRouteMatch","params","useEffect","code","discount","uses_count","order_price","onSubmit","data","cash_discount","Number","val","console","log"],"mappings":"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","file":"static/js/20.3b7f3779.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { FC } from \"react\";\nimport { DeepMap, FieldError } from \"react-hook-form\";\nimport \"./form-input.scss\";\n\ninterface FormInputProps {\n  placeholder: string;\n  errors: DeepMap<Record<string, any>, FieldError>;\n  name: string;\n  type: string;\n  register: any;\n  required: any;\n  title?: string;\n  customStyle?: any;\n  onChange?: any;\n  step?: string;\n  min?: string;\n  max?: string;\n}\n\nexport const FormInput: FC<FormInputProps> = ({\n  placeholder,\n  errors,\n  name,\n  type,\n  register,\n  title,\n  required,\n  customStyle,\n  onChange,\n  ...props\n}) => {\n  return (\n    <div className=\"Container\" style={customStyle}>\n      <p className=\"Row-Title\">{title}</p>\n      <div className=\"Container-Row\">\n        <input\n          className={`Container-Row-Input ${\n            errors[name] ? \"Container-Row-Input-Error\" : \"\"\n          }`}\n          type={type}\n          step=\"0.01\"\n          name={name}\n          onChange={(e) => (onChange ? onChange(e.target.value) : null)}\n          placeholder={placeholder}\n          ref={register(required)}\n          {...props}\n        />\n        {type === \"checkbox\" && (\n          <b className=\"Container-Row-Title\">{placeholder}</b>\n        )}\n      </div>\n      <div className={`Error ${errors[name] ? \"Error-Trans\" : \"\"}`}>\n        {errors[name] && <b className=\"Error-Text\">Value required</b>}\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Dispatch } from \"redux\";\nimport { useForm } from \"react-hook-form\";\nimport { FormInput } from \"../../components/FormInput/FormInput\";\nimport { RootState } from \"../../redux/RootReducer\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./edit-promocode.scss\";\nimport {\n  fetchSinglePromocode,\n  fetchUpdatePromocode,\n} from \"../../redux/promocode/actions\";\nimport { Promocode } from \"../../common/types/Types\";\n\ntype EditPromocode = {\n  code: string;\n  discount: number;\n  uses_count: number;\n  percentage_discount: boolean;\n  cash_discount: boolean;\n  order_price: number;\n};\n\ninterface EditPromocodeProps {\n  singlePromocode: any;\n  fetchSinglePromocode: (promocodeId: string) => void;\n  fetchUpdatePromocode: (\n    updated_promocode: Promocode,\n    promocodeId: string,\n    history: any\n  ) => void;\n}\n\nconst EditPromocodeContainer: FC<EditPromocodeProps> = ({\n  singlePromocode,\n  fetchSinglePromocode,\n  fetchUpdatePromocode,\n}) => {\n  let history = useHistory();\n  const { register, handleSubmit, errors, setValue } = useForm();\n  const match = useRouteMatch<any>();\n  const { promocodeId } = match.params;\n  const onSubmit = (data: EditPromocode) => {\n    fetchUpdatePromocode(\n      {\n        code: data.code,\n        type: data.cash_discount ? \"CASH\" : \"PERCENT\",\n        uses_count: data.uses_count,\n        discount: Number(data.discount),\n        order_price: data.order_price ? Number(data.order_price) : 0,\n      },\n      promocodeId,\n      history\n    );\n  };\n\n  useEffect(() => {\n    fetchSinglePromocode(promocodeId);\n  }, []);\n\n  useEffect(() => {\n    if (singlePromocode) {\n      setValue(\"code\", singlePromocode.code);\n      setValue(\"discount\", singlePromocode.discount);\n      setValue(\"uses_count\", singlePromocode.uses_count || 1);\n      setValue(\n        \"cash_discount\",\n        !singlePromocode.type || singlePromocode.type === \"CASH\"\n      );\n      setValue(\n        \"percentage_discount\",\n        singlePromocode.type && singlePromocode.type === \"PERCENT\"\n      );\n\n      setValue(\n        \"order_price\",\n        singlePromocode.order_price ? singlePromocode.order_price : 0\n      );\n    }\n  }, [singlePromocode]);\n\n  return (\n    <div className=\"Promocode-Edit\">\n      <div className=\"Promocode-Edit-Header\">\n        <p className=\"Promocode-Edit-Header-Title\">Update Promocode</p>\n        <div className=\"Promocode-Edit-Header-Button\"></div>\n      </div>\n      <form className=\"Promocode-Edit-Form\" onSubmit={handleSubmit(onSubmit)}>\n        <p className=\"Promocode-Edit-Form-Title\">Promocode</p>\n        <FormInput\n          placeholder={\"Code\"}\n          name={\"code\"}\n          type={\"text\"}\n          errors={errors}\n          register={register}\n          required={{ required: true }}\n        />\n        <p className=\"Promocode-Edit-Form-Title\">Number of uses(Default 1)</p>\n        <FormInput\n          placeholder={\"Number of uses\"}\n          name={\"uses_count\"}\n          type={\"number\"}\n          errors={errors}\n          register={register}\n          required={{}}\n        />\n        <p className=\"Promocode-Edit-Form-Title\">Minimal order price</p>\n        <FormInput\n          placeholder={\"Minimum order price\"}\n          name={\"order_price\"}\n          type={\"text\"}\n          errors={errors}\n          register={register}\n          required={{}}\n        />\n        <p className=\"Promocode-Edit-Form-Title\">Promocode type</p>\n        <div className=\"Promocode-Edit-Form-Row\">\n          <FormInput\n            placeholder={\"Cash discount\"}\n            name={\"cash_discount\"}\n            type={\"checkbox\"}\n            errors={errors}\n            onChange={(val: any) => {\n              console.log(val);\n              setValue(\"cash_discount\", val === \"on\");\n              setValue(\"percentage_discount\", false);\n            }}\n            register={register}\n            required={{}}\n          />\n          <FormInput\n            placeholder={\"Percentage discount\"}\n            name={\"percentage_discount\"}\n            type={\"checkbox\"}\n            onChange={(val: any) => {\n              console.log(val);\n              setValue(\"cash_discount\", false);\n              setValue(\"percentage_discount\", val === \"on\");\n            }}\n            errors={errors}\n            register={register}\n            required={{}}\n          />\n        </div>\n        <p className=\"Promocode-Edit-Form-Title\">Discount</p>\n        <FormInput\n          placeholder={\"Discount\"}\n          name={\"discount\"}\n          type={\"text\"}\n          errors={errors}\n          register={register}\n          required={{ required: true }}\n        />\n        <input\n          type=\"submit\"\n          className=\"Promocode-Edit-Form-Button\"\n          value=\"Update\"\n        />\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    singlePromocode: state.promocode.singlePromocode,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchSinglePromocode: (promocodeId: string) =>\n    dispatch(fetchSinglePromocode(promocodeId)),\n  fetchUpdatePromocode: (\n    updated_promocode: Promocode,\n    promocodeId: string,\n    history: any\n  ) => dispatch(fetchUpdatePromocode(updated_promocode, promocodeId, history)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditPromocodeContainer);\n"],"sourceRoot":""}