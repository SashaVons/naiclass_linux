{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/Statistic/OrderStatistic.tsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","connect","state","orders","dispatch","fetchAllOrders","fetchDeleteCategory","categoryId","useRouteMatch","useHistory","useState","sortOrders","setSortOrders","useEffect","groupOrders","reduce","r","a","phoneNumber","console","log","entries","__sort","map","number","className","sort","b","length","align","order","href","_id","moment","date","format","price","toFixed"],"mappings":"+KAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,4JImI/EC,uBAZS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAMC,OAAOA,WAIE,SAACC,GAAD,MAAyB,CAClDC,eAAgB,kBAAMD,EAASC,gBAC/BC,oBAAqB,SAACC,GAAD,OACnBH,EAASE,YAAoBC,QAGlBN,EAlHkC,SAAC,GAI3C,IAHLE,EAGI,EAHJA,OACAE,EAEI,EAFJA,eAEI,KADJC,oBAEcE,cACEC,cACQC,oBAAS,IAH7B,gCAIsCA,mBAAS,IAJ/C,gCAKgCA,mBAAS,KALzC,mBAKGC,EALH,KAKeC,EALf,KAOJC,qBAAU,WACRR,MACC,IAEHQ,qBAAU,WACR,GAAIV,EAAQ,CACV,IAAMW,EAAcX,EAAOY,QAAO,SAACC,EAAQC,GAEzC,OADAD,EAAEC,EAAEC,aAAJ,sBAAuBF,EAAEC,EAAEC,cAAgB,IAA3C,CAA+CD,IACxCD,IACN,IAEHG,QAAQC,IAAIvB,OAAOwB,QAAQP,IAC3B,IAAMQ,EAASzB,OAAOwB,QAAQP,GAAaS,KAAI,SAACC,GAAD,MAAkB,CAC/DN,YAAaM,EAAO,GACpBrB,OAAQqB,EAAO,OAGjBZ,EAAcU,MAEf,CAACnB,IASJ,OACE,mCACE,sBAAKsB,UAAU,SAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,yBACf,mBAAGA,UAAU,sBAAb,8BACA,qBAAKA,UAAU,4BAEjB,wBAAOA,UAAU,eAAjB,UACE,gCACE,+BACE,8CACA,6CAGJ,gCACGd,GAAcA,EAAWe,MAvBhB,SAACT,EAAQU,GAC3B,OAAIV,EAAEd,OAAOyB,OAASD,EAAExB,OAAOyB,QAAgB,EAC3CX,EAAEd,OAAOyB,OAASD,EAAExB,OAAOyB,OAAe,EAEvC,KAmB6CL,KAAI,SAACL,GAAD,MAAkD,cAA5BA,EAAYA,YAChF,mCACE,+BACE,oBAAIO,UAAU,qBAAqBI,MAAM,OAAzC,SAAiDX,EAAYA,cAC7D,oBAAIO,UAAU,qBAAqBI,MAAM,OAAzC,SACGX,EAAYf,OAAOoB,KAAI,SAACO,GAAD,OACtB,8BACE,oBAAGL,UAAU,0BAA0BM,KAAI,0BAAqBD,EAAME,KAAtE,UACGC,IAAOH,EAAMI,MAAMC,OAAO,kBAD7B,KACkDL,EAAMM,MAAMC,QAAQ,GADtE,0BAgCR","file":"static/js/29.aeb9816d.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { FC, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport {\n  fetchAllCategories,\n  fetchDeleteCategory,\n} from \"../../redux/categories/actions\";\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { RootState } from \"../../redux/RootReducer\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport \"./order-statistic.scss\";\nimport { AcceptDialog } from \"../../components/AcceptDialog/AcceptDialog\";\nimport { fetchAllOrders } from \"../../redux/orders/actions\";\nimport moment from \"moment\";\n\ninterface OrdersListProps {\n  orders: any;\n  fetchAllOrders: () => void;\n  fetchDeleteCategory: (categoryId: string) => void;\n}\n\nconst OrdersListContainer: FC<OrdersListProps> = ({\n  orders,\n  fetchAllOrders,\n  fetchDeleteCategory,\n}) => {\n  const match = useRouteMatch();\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const [categoryIndex, setCategoryIndex] = useState(0);\n  const [sortOrders, setSortOrders] = useState([])\n\n  useEffect(() => {\n    fetchAllOrders();\n  }, []);\n\n  useEffect(() => {\n    if (orders) {\n      const groupOrders = orders.reduce((r: any, a: any) => {\n        r[a.phoneNumber] = [...r[a.phoneNumber] || [], a]\n        return r\n      }, {})\n\n      console.log(Object.entries(groupOrders))\n      const __sort = Object.entries(groupOrders).map((number: any) => ({\n        phoneNumber: number[0],\n        orders: number[1],\n      }))\n\n      setSortOrders(__sort as any)\n    }\n  }, [orders])\n\n  const sortCompare = (a: any, b: any) => {\n    if (a.orders.length > b.orders.length) return -1\n    if (a.orders.length < b.orders.length) return 1\n\n    return 0\n  }\n\n  return (\n    <>\n      <div className=\"Orders\">\n        <div className=\"Orders-Header\">\n          <div className=\"Orders-Header-Button\"></div>\n          <p className=\"Orders-Header-Title\">Orders Statistic</p>\n          <div className=\"Orders-Header-Button\"></div>\n        </div>\n        <table className=\"Orders-Table\">\n          <thead>\n            <tr>\n              <th>Phone number</th>\n              <th>Orders</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortOrders && sortOrders.sort(sortCompare).map((phoneNumber: any) => phoneNumber.phoneNumber !== 'undefined' ? (\n              <>\n                <tr>\n                  <td className=\"Orders-Table-Title\" align=\"left\">{phoneNumber.phoneNumber}</td>\n                  <td className=\"Orders-Table-Title\" align=\"left\">\n                    {phoneNumber.orders.map((order: any) => (\n                      <div>\n                        <a className=\"Orders-Table-Order-View\" href={`/cabinet/orders/${order._id}`}>\n                          {moment(order.date).format(\"DD/MM/YY HH:mm\")} ({order.price.toFixed(2)} â‚¬)\n                        </a>\n                      </div>\n                    ))}\n                  </td>\n                </tr>\n                {/* <tr\n                        onClick={() =>\n                          history.push(`/cabinet/orders/${item._id}`)\n                        }\n                      >\n                        <td className=\"Orders-Table-Title\" align=\"left\">\n                          {moment(item.date).format(\"DD/MM/YY HH:mm\")}\n                        </td>\n                        <td className=\"Orders-Table-Title\" align=\"left\">\n                          {item.status}\n                        </td>\n                        <td className=\"Orders-Table-Title\" align=\"left\">\n                          {item.products.length}\n                        </td>\n                        <td className=\"Orders-Table-Title\" align=\"left\">\n                          {item.price.toFixed(2)}\n                        </td>\n                        <td className=\"Orders-Table-Title\" align=\"left\">\n                          {item.promocode ? \"Used\" : \"None\"}\n                        </td>\n                        <td className=\"Orders-Table-Title\" align=\"left\">\n                          {item.paymentType}\n                        </td>\n                      </tr> */}\n              </>\n            ) : null)}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    orders: state.orders.orders,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAllOrders: () => dispatch(fetchAllOrders()),\n  fetchDeleteCategory: (categoryId: string) =>\n    dispatch(fetchDeleteCategory(categoryId)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrdersListContainer);\n"],"sourceRoot":""}