{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/FormInput/FormInput.tsx","pages/CreateCategory/CreateCategoryContainer.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","FormInput","placeholder","errors","name","type","register","title","required","customStyle","onChange","props","className","style","step","e","value","ref","connect","state","last_photo","image","dispatch","fetchCreatePhoto","fetchCreateCategory","name_pt","history","useHistory","useState","isPhotoLoad","setPhotoLoad","useForm","handleSubmit","handleImageAsFile","a","files","console","log","onSubmit","data","src","accept"],"mappings":"wLACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,YEEIW,G,YAAgC,SAAC,GAWvC,IAVLC,EAUI,EAVJA,YACAC,EASI,EATJA,OACAC,EAQI,EARJA,KACAC,EAOI,EAPJA,KACAC,EAMI,EANJA,SACAC,EAKI,EALJA,MACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACGC,EACC,mGACJ,OACE,sBAAKC,UAAU,YAAYC,MAAOJ,EAAlC,UACE,mBAAGG,UAAU,YAAb,SAA0BL,IAC1B,sBAAKK,UAAU,gBAAf,UACE,mCACEA,UAAS,8BACPT,EAAOC,GAAQ,4BAA8B,IAE/CC,KAAMA,EACNS,KAAK,OACLV,KAAMA,EACNM,SAAU,SAACK,GAAD,OAAQL,EAAWA,EAASK,EAAEzB,OAAO0B,OAAS,MACxDd,YAAaA,EACbe,IAAKX,EAASE,IACVG,IAEI,aAATN,GACC,mBAAGO,UAAU,sBAAb,SAAoCV,OAGxC,qBAAKU,UAAS,gBAAWT,EAAOC,GAAQ,cAAgB,IAAxD,SACGD,EAAOC,IAAS,mBAAGQ,UAAU,aAAb,oC,4KC4DVM,uBAhBS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAME,MAAMD,eAID,SAACE,GAAD,MAAyB,CAClDC,iBAAkB,SAACF,GAAD,OAAgBC,EAASC,YAAiBF,KAC5DG,oBAAqB,SACnBpB,EACAqB,EACAJ,EACAK,GAJmB,OAKhBJ,EAASE,YAAoBpB,EAAMqB,EAASJ,EAAOK,QAG3CR,EArF0C,SAAC,GAInD,IAHLK,EAGI,EAHJA,iBACAC,EAEI,EAFJA,oBACAJ,EACI,EADJA,WAEIM,EAAUC,cADV,EAEgCC,oBAAS,GAFzC,mBAEGC,EAFH,KAEgBC,EAFhB,OAGuCC,cAAnCzB,EAHJ,EAGIA,SAAU0B,EAHd,EAGcA,aAAc7B,EAH5B,EAG4BA,OAE1B8B,EAAiB,uCAAG,WAAOlB,GAAP,eAAAmB,EAAA,6DAClBb,EAAQN,EAAEzB,OAAO6C,MAAM,GAC7BC,QAAQC,IAAIhB,GAFY,SAGlBE,EAAiBF,GAHC,OAIxBS,GAAa,GAJW,2CAAH,sDAWvB,OACE,sBAAKlB,UAAU,kBAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,mBAAGA,UAAU,+BAAb,4BACA,qBAAKA,UAAU,qCAEjB,uBAAMA,UAAU,uBAAuB0B,SAAUN,GAXpC,SAACO,GACZV,GAAeT,GACjBI,EAAoBe,EAAKnC,KAAMmC,EAAKd,QAASL,EAAYM,MASzD,UACGG,EACC,qBACEjB,UAAU,sCACV4B,IAAKpB,IAGP,qBAAKR,UAAU,mCAAf,SACE,kDAGJ,uBACEP,KAAK,OACLoC,OAAO,iCACP7B,UAAU,6BACVF,SAAUuB,IAEZ,cAAC,IAAD,CACE/B,YAAa,OACbE,KAAM,OACNC,KAAM,OACNF,OAAQA,EACRG,SAAUA,EACVE,SAAU,CAAEA,UAAU,KAExB,cAAC,IAAD,CACEN,YAAa,gBACbE,KAAM,UACNC,KAAM,OACNF,OAAQA,EACRG,SAAUA,EACVE,SAAU,CAAEA,UAAU,KAExB,uBACEH,KAAK,SACLO,UAAU,8BACVI,MAAM","file":"static/js/17.b0204135.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { FC } from \"react\";\nimport { DeepMap, FieldError } from \"react-hook-form\";\nimport \"./form-input.scss\";\n\ninterface FormInputProps {\n  placeholder: string;\n  errors: DeepMap<Record<string, any>, FieldError>;\n  name: string;\n  type: string;\n  register: any;\n  required: any;\n  title?: string;\n  customStyle?: any;\n  onChange?: any;\n  step?: string;\n  min?: string;\n  max?: string;\n}\n\nexport const FormInput: FC<FormInputProps> = ({\n  placeholder,\n  errors,\n  name,\n  type,\n  register,\n  title,\n  required,\n  customStyle,\n  onChange,\n  ...props\n}) => {\n  return (\n    <div className=\"Container\" style={customStyle}>\n      <p className=\"Row-Title\">{title}</p>\n      <div className=\"Container-Row\">\n        <input\n          className={`Container-Row-Input ${\n            errors[name] ? \"Container-Row-Input-Error\" : \"\"\n          }`}\n          type={type}\n          step=\"0.01\"\n          name={name}\n          onChange={(e) => (onChange ? onChange(e.target.value) : null)}\n          placeholder={placeholder}\n          ref={register(required)}\n          {...props}\n        />\n        {type === \"checkbox\" && (\n          <b className=\"Container-Row-Title\">{placeholder}</b>\n        )}\n      </div>\n      <div className={`Error ${errors[name] ? \"Error-Trans\" : \"\"}`}>\n        {errors[name] && <b className=\"Error-Text\">Value required</b>}\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { useForm } from \"react-hook-form\";\nimport { FormInput } from \"../../components/FormInput/FormInput\";\nimport { fetchCreatePhoto } from \"../../redux/image/actions\";\nimport { RootState } from \"../../redux/RootReducer\";\nimport \"./create-category.scss\";\nimport { fetchCreateCategory } from \"../../redux/categories/actions\";\nimport { useHistory } from \"react-router-dom\";\n\ntype CreateCategory = {\n  name: string;\n  name_pt: string;\n};\n\ninterface CreateCategoryProps {\n  fetchCreatePhoto: (image: any) => void;\n  fetchCreateCategory: (\n    name: string,\n    name_pt: string,\n    image: string,\n    history: any\n  ) => void;\n  last_photo: string | undefined;\n}\n\nconst CreateCategoryContainer: FC<CreateCategoryProps> = ({\n  fetchCreatePhoto,\n  fetchCreateCategory,\n  last_photo,\n}) => {\n  let history = useHistory();\n  const [isPhotoLoad, setPhotoLoad] = useState(false);\n  const { register, handleSubmit, errors } = useForm();\n\n  const handleImageAsFile = async (e: any) => {\n    const image = e.target.files[0];\n    console.log(image);\n    await fetchCreatePhoto(image);\n    setPhotoLoad(true);\n  };\n  const onSubmit = (data: CreateCategory) => {\n    if (isPhotoLoad && last_photo)\n      fetchCreateCategory(data.name, data.name_pt, last_photo, history);\n  };\n\n  return (\n    <div className=\"Category-Create\">\n      <div className=\"Category-Create-Header\">\n        <p className=\"Category-Create-Header-Title\">Creat Category</p>\n        <div className=\"Category-Create-Header-Button\"></div>\n      </div>\n      <form className=\"Category-Create-Form\" onSubmit={handleSubmit(onSubmit)}>\n        {isPhotoLoad ? (\n          <img\n            className=\"Category-Create-Form-Selected-Image\"\n            src={last_photo}\n          />\n        ) : (\n          <div className=\"Category-Create-Form-Image-Empty\">\n            <p>Image not added</p>\n          </div>\n        )}\n        <input\n          type=\"file\"\n          accept=\"image/jpeg,image/png,image/jpg\"\n          className=\"Category-Create-Form-Image\"\n          onChange={handleImageAsFile}\n        />\n        <FormInput\n          placeholder={\"Name\"}\n          name={\"name\"}\n          type={\"text\"}\n          errors={errors}\n          register={register}\n          required={{ required: true }}\n        />\n        <FormInput\n          placeholder={\"Protugal Name\"}\n          name={\"name_pt\"}\n          type={\"text\"}\n          errors={errors}\n          register={register}\n          required={{ required: true }}\n        />\n        <input\n          type=\"submit\"\n          className=\"Category-Create-Form-Button\"\n          value=\"Create\"\n        />\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    last_photo: state.image.last_photo,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchCreatePhoto: (image: any) => dispatch(fetchCreatePhoto(image)),\n  fetchCreateCategory: (\n    name: string,\n    name_pt: string,\n    image: string,\n    history: any\n  ) => dispatch(fetchCreateCategory(name, name_pt, image, history)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateCategoryContainer);\n"],"sourceRoot":""}