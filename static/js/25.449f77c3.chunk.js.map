{"version":3,"sources":["components/AcceptDialog/AcceptDialog.tsx","pages/CategoryList/CategoryListContainer.tsx"],"names":["AcceptDialog","title","content","show","setShow","actionOnSuccess","open","onClose","aria-labelledby","aria-describedby","id","onClick","color","autoFocus","connect","state","categories","category","dispatch","fetchAllCategories","fetchDeleteCategory","categoryId","match","useRouteMatch","useState","setOpen","categoryIndex","setCategoryIndex","useEffect","_id","className","to","url","map","item","index","align","src","image","name","name_pt"],"mappings":"gOAgBaA,EAAsC,SAAC,GAM7C,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEA,OACE,mCACE,eAAC,IAAD,CACEC,KAAMH,EACNI,QAAS,kBAAMH,GAAQ,IACvBI,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAAC,IAAD,CAAaC,GAAG,qBAAhB,SAAsCT,IAErCC,EACC,cAAC,IAAD,UACE,cAAC,IAAD,CAAmBQ,GAAG,2BAAtB,SACGR,MAGH,KACJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAQS,QAAS,kBAAMP,GAAQ,IAAQQ,MAAM,UAA7C,oBAGA,cAAC,IAAD,CACED,QAAS,WACPN,IACAD,GAAQ,IAEVQ,MAAM,UACNC,WAAS,EANX,0B,oJCwEKC,uBAZS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAME,SAASD,eAIJ,SAACE,GAAD,MAAyB,CAClDC,mBAAoB,kBAAMD,EAASC,gBACnCC,oBAAqB,SAACC,GAAD,OACnBH,EAASE,YAAoBC,QAGlBP,EAhGsC,SAAC,GAI/C,IAHLE,EAGI,EAHJA,WACAG,EAEI,EAFJA,mBACAC,EACI,EADJA,oBAEME,EAAQC,cADV,EAEoBC,oBAAS,GAF7B,mBAEGlB,EAFH,KAESmB,EAFT,OAGsCD,mBAAS,GAH/C,mBAGGE,EAHH,KAGkBC,EAHlB,KASJ,OAJAC,qBAAU,WACRT,MACC,IAGD,qCACE,cAAC,IAAD,CACElB,MAAM,oCACNE,KAAMG,EACND,gBAAiB,kBACfe,EAAoBJ,EAAWU,GAAeG,MAEhDzB,QAASqB,IAEX,sBAAKK,UAAU,WAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,2BACf,mBAAGA,UAAU,wBAAb,sBACA,cAAC,IAAD,CAAMA,UAAU,yBAAyBC,GAAE,UAAKT,EAAMU,IAAX,WAA3C,SACE,cAAC,IAAD,CAAMF,UAAU,8BAAhB,qCAKJ,wBAAOA,UAAU,iBAAjB,UACE,gCACE,+BACE,uCACA,sCACA,+CACA,6CAGJ,gCACGd,EACGA,EAAWiB,KAAI,SAACC,EAAWC,GAAZ,OACb,mCACE,+BACE,oBAAIC,MAAM,OAAV,SACE,qBACEC,IAAKH,EAAKI,MACVR,UAAU,2BAGd,oBAAIA,UAAU,uBAAuBM,MAAM,OAA3C,SACGF,EAAKK,OAER,oBAAIT,UAAU,uBAAuBM,MAAM,OAA3C,SACGF,EAAKM,UAER,qBAAIJ,MAAM,QAAV,UAEE,cAAC,IAAD,CAAML,GAAE,UAAKT,EAAMU,IAAX,iBAAuBE,EAAKL,KAApC,SACE,cAAC,IAAD,CAAMC,UAAU,sBAAhB,oBAEF,qBACEnB,QAAS,WACPgB,EAAiBQ,GACjBV,GAAQ,IAHZ,SAME,cAAC,IAAD,CAAMK,UAAU,wBAAhB,iCAMV","file":"static/js/25.449f77c3.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\ninterface AcceptDialogProps {\n  title: string;\n  content?: string;\n  show: boolean;\n  setShow: React.Dispatch<React.SetStateAction<boolean>>;\n  actionOnSuccess: () => void;\n}\n\nexport const AcceptDialog: FC<AcceptDialogProps> = ({\n  title,\n  content,\n  show,\n  setShow,\n  actionOnSuccess,\n}) => {\n  return (\n    <>\n      <Dialog\n        open={show}\n        onClose={() => setShow(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n\n        {content ? (\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {content}\n            </DialogContentText>\n          </DialogContent>\n        ) : null}\n        <DialogActions>\n          <Button onClick={() => setShow(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              actionOnSuccess();\n              setShow(false);\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport {\n  fetchAllCategories,\n  fetchDeleteCategory,\n} from \"../../redux/categories/actions\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { RootState } from \"../../redux/RootReducer\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport \"./category-list.scss\";\nimport { AcceptDialog } from \"../../components/AcceptDialog/AcceptDialog\";\n\ninterface CategoryListProps {\n  categories: any;\n  fetchAllCategories: () => void;\n  fetchDeleteCategory: (categoryId: string) => void;\n}\n\nconst CategoryListContainer: FC<CategoryListProps> = ({\n  categories,\n  fetchAllCategories,\n  fetchDeleteCategory,\n}) => {\n  const match = useRouteMatch();\n  const [open, setOpen] = useState(false);\n  const [categoryIndex, setCategoryIndex] = useState(0);\n\n  useEffect(() => {\n    fetchAllCategories();\n  }, []);\n\n  return (\n    <>\n      <AcceptDialog\n        title=\"Do you want delete this category?\"\n        show={open}\n        actionOnSuccess={() =>\n          fetchDeleteCategory(categories[categoryIndex]._id)\n        }\n        setShow={setOpen}\n      />\n      <div className=\"Category\">\n        <div className=\"Category-Header\">\n          <div className=\"Category-Header-Button\"></div>\n          <p className=\"Category-Header-Title\">Category</p>\n          <Link className=\"Category-Header-Button\" to={`${match.url}/create`}>\n            <Icon className=\"Category-Header-Button-Icon\">\n              add_circle_outline\n            </Icon>\n          </Link>\n        </div>\n        <table className=\"Category-Table\">\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>Name</th>\n              <th>Portugal Name</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {categories\n              ? categories.map((item: any, index: number) => (\n                  <>\n                    <tr>\n                      <td align=\"left\">\n                        <img\n                          src={item.image}\n                          className=\"Category-Table-Image\"\n                        />\n                      </td>\n                      <td className=\"Category-Table-Title\" align=\"left\">\n                        {item.name}\n                      </td>\n                      <td className=\"Category-Table-Title\" align=\"left\">\n                        {item.name_pt}\n                      </td>\n                      <td align=\"right\">\n                        {/* /edit/:categoryId */}\n                        <Link to={`${match.url}/edit/${item._id}`}>\n                          <Icon className=\"Category-Table-Edit\">edit</Icon>\n                        </Link>\n                        <div\n                          onClick={() => {\n                            setCategoryIndex(index);\n                            setOpen(true);\n                          }}\n                        >\n                          <Icon className=\"Category-Table-Delete\">delete</Icon>\n                        </div>\n                      </td>\n                    </tr>\n                  </>\n                ))\n              : null}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    categories: state.category.categories,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAllCategories: () => dispatch(fetchAllCategories()),\n  fetchDeleteCategory: (categoryId: string) =>\n    dispatch(fetchDeleteCategory(categoryId)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoryListContainer);\n"],"sourceRoot":""}