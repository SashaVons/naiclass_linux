{"version":3,"sources":["components/AcceptDialog/AcceptDialog.tsx","pages/SubCategoryList/SubCategoryListContainer.tsx"],"names":["AcceptDialog","title","content","show","setShow","actionOnSuccess","open","onClose","aria-labelledby","aria-describedby","id","onClick","color","autoFocus","connect","state","subCategories","sub_category","dispatch","fetchAllSubCategories","fetchDeleteSubCategory","subCategoryId","match","useRouteMatch","useState","setOpen","subCategoryIndex","setSubCategoryIndex","useEffect","_id","className","to","url","map","item","index","align","name","name_pt","category","available","from"],"mappings":"gOAgBaA,EAAsC,SAAC,GAM7C,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEA,OACE,mCACE,eAAC,IAAD,CACEC,KAAMH,EACNI,QAAS,kBAAMH,GAAQ,IACvBI,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAAC,IAAD,CAAaC,GAAG,qBAAhB,SAAsCT,IAErCC,EACC,cAAC,IAAD,UACE,cAAC,IAAD,CAAmBQ,GAAG,2BAAtB,SACGR,MAGH,KACJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAQS,QAAS,kBAAMP,GAAQ,IAAQQ,MAAM,UAA7C,oBAGA,cAAC,IAAD,CACED,QAAS,WACPN,IACAD,GAAQ,IAEVQ,MAAM,UACNC,WAAS,EANX,0B,kJC8EKC,uBAZS,SAACC,GACvB,MAAO,CACLC,cAAeD,EAAME,aAAaD,kBAIX,SAACE,GAAD,MAAyB,CAClDC,sBAAuB,kBAAMD,EAASC,gBACtCC,uBAAwB,SAACC,GAAD,OACtBH,EAASE,YAAuBC,QAGrBP,EAvG4C,SAAC,GAIrD,IAHLK,EAGI,EAHJA,sBACAC,EAEI,EAFJA,uBACAJ,EACI,EADJA,cAEMM,EAAQC,cADV,EAEoBC,oBAAS,GAF7B,mBAEGlB,EAFH,KAESmB,EAFT,OAG4CD,mBAAS,GAHrD,mBAGGE,EAHH,KAGqBC,EAHrB,KAQJ,OAHAC,qBAAU,WACRT,MACC,IAED,qCACE,cAAC,IAAD,CACElB,MAAM,wCACNE,KAAMG,EACND,gBAAiB,kBACfe,EAAuBJ,EAAcU,GAAkBG,MAEzDzB,QAASqB,IAEX,sBAAKK,UAAU,eAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,+BACf,mBAAGA,UAAU,4BAAb,0BACA,cAAC,IAAD,CACEA,UAAU,6BACVC,GAAE,UAAKT,EAAMU,IAAX,WAFJ,SAIE,cAAC,IAAD,CAAMF,UAAU,kCAAhB,qCAKJ,wBAAOA,UAAU,qBAAjB,UACE,gCACE,+BACE,sCACA,+CACA,0CACA,gDACA,6CAGJ,gCACGd,EACGA,EAAciB,KAAI,SAACC,EAAWC,GAAZ,OAClB,mCACE,+BACE,oBAAIL,UAAU,2BAA2BM,MAAM,OAA/C,SACGF,EAAKG,OAER,oBAAIP,UAAU,2BAA2BM,MAAM,OAA/C,SACGF,EAAKI,UAER,oBAAIR,UAAU,2BAA2BM,MAAM,OAA/C,SACGF,EAAKK,SACFL,EAAKK,SAASF,KACd,0BAEN,oBAAIP,UAAU,2BAA2BM,MAAM,OAA/C,SACGF,EAAKM,UAAL,UAAoBN,EAAKM,UAAUC,KAAnC,YAA2CP,EAAKM,UAAUT,IAAO,MAEpE,qBAAIK,MAAM,QAAV,UAEE,cAAC,IAAD,CAAML,GAAE,UAAKT,EAAMU,IAAX,iBAAuBE,EAAKL,KAApC,SACE,cAAC,IAAD,CAAMC,UAAU,0BAAhB,oBAEF,qBACEnB,QAAS,WACPgB,EAAoBQ,GACpBV,GAAQ,IAHZ,SAME,cAAC,IAAD,CAAMK,UAAU,4BAAhB,iCAQR","file":"static/js/27.79a1f168.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\ninterface AcceptDialogProps {\n  title: string;\n  content?: string;\n  show: boolean;\n  setShow: React.Dispatch<React.SetStateAction<boolean>>;\n  actionOnSuccess: () => void;\n}\n\nexport const AcceptDialog: FC<AcceptDialogProps> = ({\n  title,\n  content,\n  show,\n  setShow,\n  actionOnSuccess,\n}) => {\n  return (\n    <>\n      <Dialog\n        open={show}\n        onClose={() => setShow(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n\n        {content ? (\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {content}\n            </DialogContentText>\n          </DialogContent>\n        ) : null}\n        <DialogActions>\n          <Button onClick={() => setShow(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              actionOnSuccess();\n              setShow(false);\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { RootState } from \"../../redux/RootReducer\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport {\n  fetchAllSubCategories,\n  fetchDeleteSubCategory,\n} from \"../../redux/sub_categories/actions\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { AcceptDialog } from \"../../components/AcceptDialog/AcceptDialog\";\nimport \"./sub-category-list.scss\";\n\ninterface SubCategoryListProps {\n  fetchAllSubCategories: () => void;\n  fetchDeleteSubCategory: (subCategoryId: string) => void;\n  subCategories: any;\n}\n\nconst SubCategoryListContainer: FC<SubCategoryListProps> = ({\n  fetchAllSubCategories,\n  fetchDeleteSubCategory,\n  subCategories,\n}) => {\n  const match = useRouteMatch();\n  const [open, setOpen] = useState(false);\n  const [subCategoryIndex, setSubCategoryIndex] = useState(0);\n\n  useEffect(() => {\n    fetchAllSubCategories();\n  }, []);\n  return (\n    <>\n      <AcceptDialog\n        title=\"Do you want delete this sub category?\"\n        show={open}\n        actionOnSuccess={() =>\n          fetchDeleteSubCategory(subCategories[subCategoryIndex]._id)\n        }\n        setShow={setOpen}\n      />\n      <div className=\"Sub-Category\">\n        <div className=\"Sub-Category-Header\">\n          <div className=\"Sub-Category-Header-Button\"></div>\n          <p className=\"Sub-Category-Header-Title\">Sub Category</p>\n          <Link\n            className=\"Sub-Category-Header-Button\"\n            to={`${match.url}/create`}\n          >\n            <Icon className=\"Sub-Category-Header-Button-Icon\">\n              add_circle_outline\n            </Icon>\n          </Link>\n        </div>\n        <table className=\"Sub-Category-Table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Portugal Name</th>\n              <th>Category</th>\n              <th>Available Time</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {subCategories\n              ? subCategories.map((item: any, index: number) => (\n                <>\n                  <tr>\n                    <td className=\"Sub-Category-Table-Title\" align=\"left\">\n                      {item.name}\n                    </td>\n                    <td className=\"Sub-Category-Table-Title\" align=\"left\">\n                      {item.name_pt}\n                    </td>\n                    <td className=\"Sub-Category-Table-Title\" align=\"left\">\n                      {item.category\n                        ? item.category.name\n                        : \"Category not selected\"}\n                    </td>\n                    <td className=\"Sub-Category-Table-Title\" align=\"left\">\n                      {item.available ? `${item.available.from}-${item.available.to}` : '-'}\n                    </td>\n                    <td align=\"right\">\n                      {/* /edit/:categoryId */}\n                      <Link to={`${match.url}/edit/${item._id}`}>\n                        <Icon className=\"Sub-Category-Table-Edit\">edit</Icon>\n                      </Link>\n                      <div\n                        onClick={() => {\n                          setSubCategoryIndex(index);\n                          setOpen(true);\n                        }}\n                      >\n                        <Icon className=\"Sub-Category-Table-Delete\">\n                          delete\n                          </Icon>\n                      </div>\n                    </td>\n                  </tr>\n                </>\n              ))\n              : null}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    subCategories: state.sub_category.subCategories,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAllSubCategories: () => dispatch(fetchAllSubCategories()),\n  fetchDeleteSubCategory: (subCategoryId: string) =>\n    dispatch(fetchDeleteSubCategory(subCategoryId)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SubCategoryListContainer);\n"],"sourceRoot":""}