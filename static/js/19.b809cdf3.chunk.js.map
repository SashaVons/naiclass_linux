{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/FormInput/FormInput.tsx","pages/EditCategory/EditCategoryContainer.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","FormInput","placeholder","errors","name","type","register","title","required","customStyle","onChange","props","className","style","step","e","value","ref","connect","state","singleCategory","category","last_photo","image","dispatch","fetchUpdateCategory","categoryId","updated_category","history","fetchSingleCategory","fetchCreatePhoto","useHistory","useState","isPhotoLoad","setPhotoLoad","useForm","handleSubmit","setValue","useRouteMatch","params","handleImageAsFile","a","files","console","log","useEffect","name_pt","onSubmit","data","src","accept"],"mappings":"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","file":"static/js/19.b809cdf3.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { FC } from \"react\";\nimport { DeepMap, FieldError } from \"react-hook-form\";\nimport \"./form-input.scss\";\n\ninterface FormInputProps {\n  placeholder: string;\n  errors: DeepMap<Record<string, any>, FieldError>;\n  name: string;\n  type: string;\n  register: any;\n  required: any;\n  title?: string;\n  customStyle?: any;\n  onChange?: any;\n  step?: string;\n  min?: string;\n  max?: string;\n}\n\nexport const FormInput: FC<FormInputProps> = ({\n  placeholder,\n  errors,\n  name,\n  type,\n  register,\n  title,\n  required,\n  customStyle,\n  onChange,\n  ...props\n}) => {\n  return (\n    <div className=\"Container\" style={customStyle}>\n      <p className=\"Row-Title\">{title}</p>\n      <div className=\"Container-Row\">\n        <input\n          className={`Container-Row-Input ${\n            errors[name] ? \"Container-Row-Input-Error\" : \"\"\n          }`}\n          type={type}\n          step=\"0.01\"\n          name={name}\n          onChange={(e) => (onChange ? onChange(e.target.value) : null)}\n          placeholder={placeholder}\n          ref={register(required)}\n          {...props}\n        />\n        {type === \"checkbox\" && (\n          <b className=\"Container-Row-Title\">{placeholder}</b>\n        )}\n      </div>\n      <div className={`Error ${errors[name] ? \"Error-Trans\" : \"\"}`}>\n        {errors[name] && <b className=\"Error-Text\">Value required</b>}\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Dispatch } from \"redux\";\nimport { useForm } from \"react-hook-form\";\nimport { FormInput } from \"../../components/FormInput/FormInput\";\nimport {\n  fetchSingleCategory,\n  fetchUpdateCategory,\n} from \"../../redux/categories/actions\";\nimport { RootState } from \"../../redux/RootReducer\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchCreatePhoto } from \"../../redux/image/actions\";\nimport \"./edit-category.scss\";\n\ntype EditCategory = {\n  name: string;\n  name_pt: string;\n};\n\ninterface EditCategoryProps {\n  singleCategory: any;\n  fetchCreatePhoto: (image: any) => void;\n  fetchSingleCategory: (categoryId: string) => void;\n  fetchUpdateCategory: (\n    categoryId: string,\n    updated_category: { name: string; name_pt: string; image: string },\n    history: any\n  ) => void;\n  last_photo: string | undefined;\n}\n\nconst EditCategoryContainer: FC<EditCategoryProps> = ({\n  singleCategory,\n  last_photo,\n  fetchSingleCategory,\n  fetchUpdateCategory,\n  fetchCreatePhoto,\n}) => {\n  let history = useHistory();\n  const [isPhotoLoad, setPhotoLoad] = useState(false);\n  const { register, handleSubmit, errors, setValue } = useForm();\n  const match = useRouteMatch<any>();\n  const { categoryId } = match.params;\n  const onSubmit = (data: EditCategory) => {\n    fetchUpdateCategory(\n      categoryId,\n      {\n        name: data.name,\n        name_pt: data.name_pt,\n        image: isPhotoLoad && last_photo ? last_photo : singleCategory.image,\n      },\n      history\n    );\n  };\n\n  const handleImageAsFile = async (e: any) => {\n    const image = e.target.files[0];\n    console.log(image);\n    await fetchCreatePhoto(image);\n    setPhotoLoad(true);\n  };\n\n  useEffect(() => {\n    fetchSingleCategory(categoryId);\n  }, []);\n\n  useEffect(() => {\n    if (singleCategory) {\n      setValue(\"name\", singleCategory.name);\n      setValue(\"name_pt\", singleCategory.name_pt);\n    }\n  }, [singleCategory]);\n\n  return (\n    <div className=\"Category-Edit\">\n      <div className=\"Category-Edit-Header\">\n        <p className=\"Category-Edit-Header-Title\">Update Category</p>\n        <div className=\"Category-Edit-Header-Button\"></div>\n      </div>\n      <form className=\"Category-Edit-Form\" onSubmit={handleSubmit(onSubmit)}>\n        {isPhotoLoad ? (\n          <img className=\"Category-Edit-Form-Selected-Image\" src={last_photo} />\n        ) : singleCategory ? (\n          <img\n            className=\"Category-Edit-Form-Selected-Image\"\n            src={singleCategory.image}\n          />\n        ) : (\n          <div className=\"Category-Edit-Form-Image-Empty\">\n            <p>Image not added</p>\n          </div>\n        )}\n        <input\n          type=\"file\"\n          accept=\"image/jpeg,image/png,image/jpg\"\n          className=\"Category-Edit-Form-Image\"\n          onChange={handleImageAsFile}\n        />\n        <FormInput\n          placeholder={\"Name\"}\n          name={\"name\"}\n          type={\"text\"}\n          errors={errors}\n          register={register}\n          required={{ required: true }}\n        />\n        <FormInput\n          placeholder={\"Portugal Name\"}\n          name={\"name_pt\"}\n          type={\"text\"}\n          errors={errors}\n          register={register}\n          required={{ required: true }}\n        />\n        <input\n          type=\"submit\"\n          className=\"Category-Edit-Form-Button\"\n          value=\"Update\"\n        />\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    singleCategory: state.category.singleCategory,\n    last_photo: state.image.last_photo,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchUpdateCategory: (\n    categoryId: string,\n    updated_category: { name: string; image: string },\n    history: any\n  ) => dispatch(fetchUpdateCategory(categoryId, updated_category, history)),\n  fetchSingleCategory: (categoryId: string) =>\n    dispatch(fetchSingleCategory(categoryId)),\n  fetchCreatePhoto: (image: any) => dispatch(fetchCreatePhoto(image)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditCategoryContainer);\n"],"sourceRoot":""}