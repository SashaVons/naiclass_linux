{"version":3,"sources":["components/AcceptDialog/AcceptDialog.tsx","pages/PromocodesList/PromocodesListContainer.tsx"],"names":["AcceptDialog","title","content","show","setShow","actionOnSuccess","open","onClose","aria-labelledby","aria-describedby","id","onClick","color","autoFocus","connect","state","promocodes","promocode","dispatch","fetchAllPromocodes","fetchDeletePromocode","promocodeId","match","useRouteMatch","useState","setOpen","categoryId","setCategoryId","useEffect","className","to","url","filter","promo","hasOwnProperty","map","item","index","align","code","discount","type","order_price","uses_count","usedCount","_id"],"mappings":"gOAgBaA,EAAsC,SAAC,GAM7C,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEA,OACE,mCACE,eAAC,IAAD,CACEC,KAAMH,EACNI,QAAS,kBAAMH,GAAQ,IACvBI,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAAC,IAAD,CAAaC,GAAG,qBAAhB,SAAsCT,IAErCC,EACC,cAAC,IAAD,UACE,cAAC,IAAD,CAAmBQ,GAAG,2BAAtB,SACGR,MAGH,KACJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAQS,QAAS,kBAAMP,GAAQ,IAAQQ,MAAM,UAA7C,oBAGA,cAAC,IAAD,CACED,QAAS,WACPN,IACAD,GAAQ,IAEVQ,MAAM,UACNC,WAAS,EANX,0B,oJCmFKC,uBAZS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAME,UAAUD,eAIL,SAACE,GAAD,MAAyB,CAClDC,mBAAoB,kBAAMD,EAASC,gBACnCC,qBAAsB,SAACC,GAAD,OACpBH,EAASE,YAAqBC,QAGnBP,EA3G0C,SAAC,GAInD,IAHLE,EAGI,EAHJA,WACAG,EAEI,EAFJA,mBACAC,EACI,EADJA,qBAEME,EAAQC,cADV,EAEoBC,oBAAS,GAF7B,mBAEGlB,EAFH,KAESmB,EAFT,OAGgCD,mBAAS,IAHzC,mBAGGE,EAHH,KAGeC,EAHf,KASJ,OAJAC,qBAAU,WACRT,MACC,IAGD,qCACE,cAAC,IAAD,CACElB,MAAM,qCACNE,KAAMG,EACND,gBAAiB,kBAAMe,EAAqBM,IAC5CtB,QAASqB,IAEX,sBAAKI,UAAU,YAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,4BACf,mBAAGA,UAAU,yBAAb,wBACA,cAAC,IAAD,CAAMA,UAAU,0BAA0BC,GAAE,UAAKR,EAAMS,IAAX,WAA5C,SACE,cAAC,IAAD,CAAMF,UAAU,+BAAhB,qCAKJ,wBAAOA,UAAU,kBAAjB,UACE,gCACE,+BACE,sCACA,0CACA,qDACA,gDACA,+CACA,6CAGJ,gCACGb,EACGA,EACGgB,QAAO,SAACC,GAAD,OAAiBA,EAAMC,eAAe,YAC7CC,KAAI,SAACC,EAAWC,GAAZ,OACH,mCACE,+BACE,oBAAIR,UAAU,wBAAwBS,MAAM,OAA5C,SACGF,EAAKG,OAER,oBAAIV,UAAU,wBAAwBS,MAAM,OAA5C,oBACOF,EAAKI,UADZ,OAEKJ,EAAKK,MAAsB,SAAdL,EAAKK,KAAwB,IAAN,YAGzC,oBAAIZ,UAAU,wBAAwBS,MAAM,OAA5C,mBAEIF,EAAKM,YAAL,UAAsBN,EAAKM,YAA3B,kBAGJ,oBAAIb,UAAU,wBAAwBS,MAAM,OAA5C,mBACMF,EAAKO,WAAL,UAAqBP,EAAKO,YAA1B,OAEN,oBAAId,UAAU,wBAAwBS,MAAM,OAA5C,mBACMF,EAAKQ,UAAL,UAAoBR,EAAKQ,WAAzB,OAEN,qBAAIN,MAAM,QAAV,UAEE,cAAC,IAAD,CAAMR,GAAE,UAAKR,EAAMS,IAAX,iBAAuBK,EAAKS,KAApC,SACE,cAAC,IAAD,CAAMhB,UAAU,uBAAhB,oBAEF,qBACElB,QAAS,WACPgB,EAAcS,EAAKS,KACnBpB,GAAQ,IAHZ,SAME,cAAC,IAAD,CAAMI,UAAU,yBAAhB,iCAQZ","file":"static/js/26.639a00db.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\ninterface AcceptDialogProps {\n  title: string;\n  content?: string;\n  show: boolean;\n  setShow: React.Dispatch<React.SetStateAction<boolean>>;\n  actionOnSuccess: () => void;\n}\n\nexport const AcceptDialog: FC<AcceptDialogProps> = ({\n  title,\n  content,\n  show,\n  setShow,\n  actionOnSuccess,\n}) => {\n  return (\n    <>\n      <Dialog\n        open={show}\n        onClose={() => setShow(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n\n        {content ? (\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {content}\n            </DialogContentText>\n          </DialogContent>\n        ) : null}\n        <DialogActions>\n          <Button onClick={() => setShow(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              actionOnSuccess();\n              setShow(false);\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { RootState } from \"../../redux/RootReducer\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport \"./promocodes-list.scss\";\nimport { AcceptDialog } from \"../../components/AcceptDialog/AcceptDialog\";\nimport {\n  fetchAllPromocodes,\n  fetchDeletePromocode,\n} from \"../../redux/promocode/actions\";\n\ninterface PromocodesListProps {\n  promocodes: any;\n  fetchAllPromocodes: () => void;\n  fetchDeletePromocode: (promocodeId: string) => void;\n}\n\nconst PromocodesListContainer: FC<PromocodesListProps> = ({\n  promocodes,\n  fetchAllPromocodes,\n  fetchDeletePromocode,\n}) => {\n  const match = useRouteMatch();\n  const [open, setOpen] = useState(false);\n  const [categoryId, setCategoryId] = useState(\"\");\n\n  useEffect(() => {\n    fetchAllPromocodes();\n  }, []);\n\n  return (\n    <>\n      <AcceptDialog\n        title=\"Do you want delete this promocode?\"\n        show={open}\n        actionOnSuccess={() => fetchDeletePromocode(categoryId)}\n        setShow={setOpen}\n      />\n      <div className=\"Promocode\">\n        <div className=\"Promocode-Header\">\n          <div className=\"Promocode-Header-Button\"></div>\n          <p className=\"Promocode-Header-Title\">Promocodes</p>\n          <Link className=\"Promocode-Header-Button\" to={`${match.url}/create`}>\n            <Icon className=\"Promocode-Header-Button-Icon\">\n              add_circle_outline\n            </Icon>\n          </Link>\n        </div>\n        <table className=\"Promocode-Table\">\n          <thead>\n            <tr>\n              <th>Code</th>\n              <th>Discount</th>\n              <th>Minimal order price</th>\n              <th>Number of uses</th>\n              <th>Q-ty of using</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {promocodes\n              ? promocodes\n                  .filter((promo: any) => !promo.hasOwnProperty(\"owner\"))\n                  .map((item: any, index: number) => (\n                    <>\n                      <tr>\n                        <td className=\"Promocode-Table-Title\" align=\"left\">\n                          {item.code}\n                        </td>\n                        <td className=\"Promocode-Table-Title\" align=\"left\">\n                          {`-${item.discount}${\n                            !item.type || item.type === \"CASH\" ? \"€\" : \"%\"\n                          }`}\n                        </td>\n                        <td className=\"Promocode-Table-Title\" align=\"left\">\n                          {`${\n                            item.order_price ? `${item.order_price} €` : `-`\n                          }`}\n                        </td>\n                        <td className=\"Promocode-Table-Title\" align=\"left\">\n                          {`${item.uses_count ? `${item.uses_count}` : `1`}`}\n                        </td>\n                        <td className=\"Promocode-Table-Title\" align=\"left\">\n                          {`${item.usedCount ? `${item.usedCount}` : `0`}`}\n                        </td>\n                        <td align=\"right\">\n                          {/* /edit/:categoryId */}\n                          <Link to={`${match.url}/edit/${item._id}`}>\n                            <Icon className=\"Promocode-Table-Edit\">edit</Icon>\n                          </Link>\n                          <div\n                            onClick={() => {\n                              setCategoryId(item._id);\n                              setOpen(true);\n                            }}\n                          >\n                            <Icon className=\"Promocode-Table-Delete\">\n                              delete\n                            </Icon>\n                          </div>\n                        </td>\n                      </tr>\n                    </>\n                  ))\n              : null}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    promocodes: state.promocode.promocodes,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAllPromocodes: () => dispatch(fetchAllPromocodes()),\n  fetchDeletePromocode: (promocodeId: string) =>\n    dispatch(fetchDeletePromocode(promocodeId)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PromocodesListContainer);\n"],"sourceRoot":""}